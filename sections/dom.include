<h3 class="no-num" id="dom">DOM</h3>

<h3 class="no-num" id="elements">Elements</h3>
<em>This section is non-normative</em>

<p>The<dfn lt="HTMLMusicElement"> music</dfn> element is an universal link to an abstract embedded track independent of media service. This element specifices the title, edit, version, authors and releaese and type of media of content it points to, but not what service it is on.</p>

<h4 id="the-music-object">The <dfn element>music</dfn> object</h4>
The WebStream specifications defines a {{HTMLMusicElement}} interface, which this specification extends significantly:

<pre class="idl" data-highlight="webidl" dfn-for="HTMLMusicElement">
enum <dfn enum>PlayState</dfn> { "ready", "paused", "playing" };
enum <dfn enum>MediaType</dfn> { "music", "spoken", "video", "film", "tv" };
[OverrideBuiltins]
partial /*sealed*/ interface <dfn interface>HTMLMusicElement</dfn> {
attribute DOMString? <dfn attribute for="HTMLMusicElement">title</dfn>;
attribute DOMString? <dfn attribute for="HTMLMusicElement">authors</dfn>;
attribute DOMString? <dfn attribute for="HTMLMusicElement">version</dfn>;
attribute DOMString? <dfn attribute for="HTMLMusicElement">edit</dfn>;
attribute DOMString? <dfn attribute for="HTMLMusicElement">isrc</dfn>;
attribute DOMString? <dfn attribute for="HTMLMusicElement">index</dfn>;
attribute Number? <dfn attribute for="HTMLMusicElement">duration</dfn>;
attribute MediaType <dfn attribute for="HTMLMusicElement">type</dfn>;
readonly attribute PlayState <dfn attribute for="HTMLMusicElement">status</dfn>;
readonly attribute Number <dfn attribute for="HTMLMusicElement">currentPosition</dfn>;
readonly attribute boolean <dfn attribute for="HTMLMusicElement">isPlaying</dfn>;
};
HTMLMusicElement implements HTMLElement;
</pre>

<h4 id="resource-management">Resource management</h4>
<dl class="domintro">
	<dt><var>music</var> . <code>isPlaying</code> </dt>
	<dd>
		Returns if the media is currently playing
	</dd>
</dl>

<div class="impl">
The <dfn element-attr for="music"><code>isPlaying</code></dfn> attribute must return if the music is currently playing</a>.
</div>


<dl class="domintro">
	<dt><var>music</var> . <code>currentPosition</code> </dt>
	<dd>
		Returns the current playing position of the media in seconds
	</dd>
</dl>

<div class="impl">
The <dfn element-attr for="music"><code>currentPosition</code></dfn> attribute must return an positive integer if currently playing, otherwise -1</a>.
</div>

<dl class="domintro">
	<dt><var>music</var> . <code>authors</code> </dt>
	<dd>
		Returns the current playing position of the media in seconds
	</dd>
</dl>

<div class="impl">
The <dfn element-attr for="music"><code>authors</code></dfn> must be a string</a>.
</div>

<dl class="domintro">
	<dt><var>music</var> . <code>title</code> </dt>
	<dd>
		Get sets the <code>title</code>
	</dd>
</dl>

<div class="impl">
The <dfn element-attr for="music"><code>title</code></dfn> must be a string</a>.
</div>

<dl class="domintro">
	<dt><var>music</var> . <code>release</code> </dt>
	<dd>
		Get sets the <code>releasee</code> for the media
	</dd>
</dl>

<div class="impl">
The <dfn element-attr for="music"><code>release</code></dfn> must be a string and represent the name of the release</a>.
</div>

<dl class="domintro">
	<dt><var>music</var> . <code>version</code> </dt>
	<dd>
		Get sets the <code>version</code> for the music
	</dd>
</dl>

<div class="impl">
The <dfn element-attr for="music"><code>version</code></dfn> must be a string and represent the name of the release</a>.
</div>


<dl class="domintro">
	<dt><var>music</var> . <code>edit</code> </dt>
	<dd>
		Get sets the <code>edit</code> for the music. An edit differs from version as it is a cut, like Radio Edit.
	</dd>
</dl>

<div class="impl">
The <dfn element-attr for="music"><code>edit</code></dfn> must be a string and represent the name of the edit (Eg Radio)</a>.
</div>



<h3 class="no-num" id="resolvers">Resolvers</h3>
<em>This section is non-normative</em>

<p>To allow playbacks from <{music}> elements, musics services can create plugins containing implementions of {{IMusicService}} interface in user-installable plugins which resolves the tracks to the particular service and allows instant playback</p>

<pre class="idl" data-highlight="webidl" dfn-for="IMusicService">
enum ResolveResult {"available", "unavailable", "playable"};

[OverrideBuiltins]
partial /*sealed*/ interface <dfn interface>IMusicService</dfn> {
attribute DOMString? <dfn attribute for="IMusicService">connected</dfn>;

ResolveResult <dfn method for="IMusicService">resolveAndPlayTrack</dfn>(track track);

};

</pre>